package com.dhemery.impulse;

/**
 * Describes the set of CC values a control can generate.
 */
public class ControlRange {
    /**
     * The smallest CC value generated by the control.
     */
    public final int minimumValue;

    /**
     * The number of different CC values the control can generate.
     */
    public final int stepCount;

    /**
     * The difference between neighboring CC values generated by the control.
     */
    public final int stepSize;

    /**
     * Creates a control range that describes the set of CC values generated by a control.
     * @param minimumValue the smallest CC value generated by the control
     * @param stepCount the number of different CC values generated by the control
     * @param stepSize the difference between neighboring CC values generated by the control
     */
    public ControlRange(int minimumValue, int stepCount, int stepSize) {
        this.minimumValue = minimumValue;
        this.stepCount = stepCount;
        this.stepSize = stepSize;
    }

    /**
     * Finds the index of the given value in the list of CC values generated by the control.
     * @param value a CC value that the control can generate
     * @return the index of the value in the list of CC values generated by the control
     */
    public int indexOf(int value) {
        return (value - minimumValue) / stepSize;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        ControlRange that = (ControlRange) o;

        if (minimumValue != that.minimumValue) return false;
        if (stepCount != that.stepCount) return false;
        return stepSize == that.stepSize;
    }

    @Override
    public int hashCode() {
        int result = minimumValue;
        result = 31 * result + stepCount;
        result = 31 * result + stepSize;
        return result;
    }
}
